#!/bin/bash
#
#	Start the mysql database
#
bin=`dirname $0`
#. $bin/../env.sh
. $bin/env.sh


#
#	Remove any old or running container
#
echo ''
echo '** Remove any old container.'
echo "$" docker stop ${CONTAINER_NAME}
         docker stop ${CONTAINER_NAME}
echo "$" docker rm ${CONTAINER_NAME}
         docker rm ${CONTAINER_NAME}
echo ''

#
#	Start the Docker container
#
echo '** Start a new container using the new image.'
USE_VOLUMES=Y
if [ ${USE_VOLUMES} == "Y" ] ; then
	USERDIR=$(cd $bin/../volumes/user-test; pwd)
	LOGDIR=$(cd $bin/../volumes/logs-test; pwd)
	echo "$" docker run --name ${CONTAINER_NAME} -p ${SSH_PORT}:22 -p ${HTTP_PORT}:5000 -d -v ${USERDIR}:/tooltwist -v ${LOGDIR}:/logs ${IMAGE_NAME}
	         docker run --name ${CONTAINER_NAME} -p ${SSH_PORT}:22 -p ${HTTP_PORT}:5000 -d -v ${USERDIR}:/tooltwist -v ${LOGDIR}:/logs ${IMAGE_NAME}
else
	echo "$" docker run --name ${CONTAINER_NAME} -p ${SSH_PORT}:22 -p ${HTTP_PORT}:5000 -d ${IMAGE_NAME}
	         docker run --name ${CONTAINER_NAME} -p ${SSH_PORT}:22 -p ${HTTP_PORT}:5000 -d ${IMAGE_NAME}
fi


if [ $? == 0 ] ; then

	# Successful start
	echo ""
	echo ""
	echo "        open http://${DOCKER_IP}:${HTTP_PORT}/ttsvr/login"
	echo ""
	echo "        http://${DOCKER_IP}:${HTTP_PORT}/ttsvr/login"
	echo ""
	exit 0
else
	# Error return
	echo ""
	echo ""
	echo "Error: starting the container failed."
	echo ""
	exit 1;
fi
